-- 1. criar o BD
create database SP_STOREGE_PROCEDURE;

-- 2. setar BD
USE SP_STOREGE_PROCEDURE;

-- 3. criar tabela
CREATE TABLE CLIENTE (
CODIGO INT auto_increment,
NOME VARCHAR (50),
DATAHORA DATETIME,
PRIMARY KEY (CODIGO) );

-- 4. inserir dados
INSERT INTO CLIENTE (NOME, DATAHORA)
VALUES ('YAN DUARTE MARQUES', NOW()),
       ('FACULDADE ANHANGUERA', NOW()),
       ('BETIM, MINAS GERAIS', NOW());
       
-- 5. Selecionar tabela 
select * from cliente;

-- 6. criar procedimentos 
DELIMITER //
CREATE PROCEDURE SP_SELECIONAR()
BEGIN
SELECT CODIGO, NOME
FROM CLIENTE;
END;

-- 7. executar procedimento
CALL SP_SELECIONAR( );


 -- 8. CRIAR PROCEDIMENTOS UPDATE ------ UPDATE CLIENTE SET NOME = 'BETIM MINAS GERAIS' WHERE CODIGO = 3;
DELIMITER //
CREATE PROCEDURE SP_ATUALIZAR_CLIENTE_NOME(
     IN ID_CLIENTE INT,
     IN NOVO_NOME VARCHAR(50)
)
BEGIN
   UPDATE CLIENTE 
   SET NOME = NOVO_NOME
   WHERE CODIGO = ID_CLIENTE;
END;

-- 9. EXECUTAR PROCEDIMENTO
CALL SP_ATUALIZAR_CLIENTE_NOME(3,'BETIM, MINAS GERAIS');
SELECT * FROM CLIENTE;

-- 8. Criar procedimento ---- ADICIONAR NOVOS NOMES
DELIMITER //
CREATE PROCEDURE SP_ADICIONAR(
    IN NOMES VARCHAR(50) 
)
BEGIN
INSERT INTO CLIENTE (NOME, DATAHORA)
VALUES(NOMES, NOW());
END;

-- 9. Executar procedimento
CALL SP_ADICIONAR('SANTANA DO LIVRAMENTO');
CALL SP_ADICIONAR('TELÊMACO BORBAS');
SELECT * FROM CLIENTE;

-- 10. Criar procedimentos 
DELIMITER //
CREATE PROCEDURE SP_VARIAVEL()
BEGIN
  -- Variável 
  -- decimal(10,2) = limita oito numeros antes da virgula e 2 depois da virgula!!
  DECLARE MEDIA DECIMAL(10,2); 
  DECLARE MAIOR VARCHAR(100);
  DECLARE MENOR VARCHAR(100);
  
  -- Calcule média
  SELECT AVG(CODIGO) INTO MEDIA
  FROM CLIENTE;
  
  -- Cliente com mais letras no nome
  SELECT NOME INTO MAIOR
  FROM CLIENTE
  ORDER BY CHAR_LENGTH(NOME) DESC
  -- limit 1 pega so o primeiro
  LIMIT 1;
  
  -- Cliente com menos letras no nome
  SELECT NOME INTO MENOR
  FROM CLIENTE
  ORDER BY char_length(NOME) ASC
  LIMIT 1;
  
  -- Exibe os resultados
  SELECT 
  MEDIA AS 'MEDIA DOS CODIGOS',
  MAIOR AS 'CLIENTE COM MAIS LETRAS',
  MENOR AS 'CLIENTE COM MENOS LETRAS';
  END;
  
  -- 11. EXECUTAR PROCEDIMENTO
  CALL SP_VARIAVEL();
  
   -- 12. Criar procedimentos  in de entrada!
  DELIMITER //
  CREATE PROCEDURE SP_CONDICIONAL(
      IN NUMERO INT
  )
  BEGIN
  -- THEN = FAÇA
  IF NUMERO > 0 THEN
  SELECT 'NÚMERO - POSITIVO!!!' AS RESPOSTA_1;
  ELSE 
  SELECT 'NÚMERO - NEGATIVO!!!' AS RESPOSTA_2;
  END IF;
  IF NUMERO = 0 THEN
  SELECT 'NÚMERO - NEUTRO!!!' AS RESPOSTA_3;
  END IF;
  END;
  
  drop procedure if exists sp_condicional;
  -- 13. Executar procedimento 
  -- CALL E CHAMAR
  call sp_condicional(0);
  
  SELECT * FROM CLIENTE;
  
    -- 14. criar procedimento
  DELIMITER //
  CREATE PROCEDURE SP_LACO1 (
  IN INICIO INT, 
  IN FIM INT
  )
  BEGIN
  WHILE INICIO <= FIM DO
  INSERT INTO CLIENTE (NOME, DATAHORA)
  VALUES (INICIO, NOW());
  
  SET INICIO = (INICIO + 1);
  END WHILE;
  END;
  
  -- 15. EXECUTAR PROCEDIMENTOS
  CALL SP_LACO1(1,150);
  
  SELECT * FROM CLIENTE;
  
  -- 16. APAGAR OS NUMERICOS NO NOME
DELIMITER //
CREATE PROCEDURE SP_LIMPAR_NUMERICOS()
BEGIN
  DELETE FROM CLIENTE
  WHERE NOME REGEXP '^[0-9]+$';
END;

DROP PROCEDURE IF EXISTS SP_LIMPAR_NUMERICOS;

-- 17. EXECUTAR PROCEDIMENTO
SET SQL_SAFE_UPDATES = 0;
SET SQL_SAFE_UPDATES = 1;
CALL SP_LIMPAR_NUMERICOS();
SELECT * FROM  CLIENTE;

  -- 18. executar procedimentos
  DELIMITER // 
  CREATE PROCEDURE SP_LACO2()
  BEGIN
  DECLARE CONTADOR INT DEFAULT 1;
  DECLARE TOTAL INT DEFAULT 0;
  
  MEU_LOOP: LOOP
  SET TOTAL = TOTAL + CONTADOR;
  SET CONTADOR = CONTADOR + 1;
  
  IF TOTAL > 5 THEN
  LEAVE MEU_LOOP;
  END IF;
  END LOOP MEU_LOOP;
  
  SELECT TOTAL AS 'Resultado';
  end;
  
  -- 19. CHAMAR O PROCEDIMENTO
  CALL SP_LACO2();
  SELECT * FROM CLIENTE;
  
    -- 20. criando aventos NAO ENTENDI MUITO BEM!
  SET GLOBAL EVENT_SCHEDULER = ON;
  
  create event MEU_EVENTO
  ON SCHEDULE
  EVERY 3 SECOND
  STARTS NOW()
  ENDS CURRENT_TIMESTAMP + INTERVAL 15 SECOND
  DO
  CALL SP_LACO1(1,5);
  
  SHOW EVENTS;
   
  SELECT * FROM CLIENTE ORDER BY CODIGO